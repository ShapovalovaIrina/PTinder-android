# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit_test:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Unit test
      run: ./gradlew testDebug

  integration_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
          uses: actions/setup-java@v1
          with:
            java-version: 1.8
      - name: android sdk
        run: echo ${ANDROID_SDK_ROOT}
      - name : Is avgmanager exist
        run: ls ${ANDROID_SDK_ROOT}/tools/bin
      - name: JAVA_HOME value
        run: echo ${JAVA_HOME}
#      - name: Set JAVA_HOME
#        run: export JAVA_HOME=${JAVA_HOME_8_X64}
      - name: Create avd
        run: ${ANDROID_SDK_ROOT}/tools/bin/avdmanager create avd -n testAVD -k "system-images;android-29;google_apis;x86"
#      - name: Grant execute permission for docker script
#        run: chmod +x docker/docker.sh
#      - name: Start docker containers
#        run: docker/docker.sh
#      - name: "Run UI Tests"
#        uses: vgaidarji/android-github-actions-emulator@v1.0.1


