# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit_test:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Unit test
      run: ./gradlew testDebug

  integration_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant execute permission for script
        run: chmod +x docker/docker.sh && chmod +x docker/ui_test_on_emulator.sh

      - name: Start docker containers
        run: docker/docker.sh

      - name: Download emulator
        run: ${ANDROID_SDK_ROOT}/tools/bin/sdkmanager emulator

      - name: Download SDK
        run: ${ANDROID_SDK_ROOT}/tools/bin/sdkmanager "system-images;android-29;google_apis;x86"

      - name: Agree licenses
        run: ${ANDROID_SDK_ROOT}/tools/bin/sdkmanager --licenses

      - name: Create avd
        run: echo no | ${ANDROID_SDK_ROOT}/tools/bin/avdmanager create avd -n testAVD -k "system-images;android-29;google_apis;x86"

      - name: Start emulator
        run: ${ANDROID_SDK_ROOT}/emulator/emulator -avd testAVD -no-window -no-boot-anim -no-audio -verbose &

      - name: Run staff & UI tests
        run: docker/ui_test_on_emulator.sh
